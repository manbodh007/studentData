{"version":3,"sources":["helpers/url.js","helpers/utils.js","actions/auth.js","actions/actionTypes.js","components/Navbar.js","actions/student.js","components/Sign_up.js","components/Student.js","components/Login.js","components/StudentList.js","components/Home.js","actions/interview.js","components/InterviewListItem.js","components/SelectedList.js","components/Lists.js","components/Interview.js","components/App.js","reducers/auth.js","reducers/index.js","reducers/student.js","reducers/interview.js","index.js"],"names":["API_ROOT","Api_url","interview_id","student_id","status","getFormBody","params","formBody","property","encodedKey","encodeURIComponent","encodedValue","push","join","getAuthToken","localStorage","getItem","signUp","data","dispatch","url","fetch","method","headers","body","then","response","json","console","log","type","message","Navbar","props","handleLogOut","removeItem","showform","state","formStyle","setState","handleForm","e","preventDefault","Authorization","success","student","handleChange","fieldName","value","name","batch","collageName","dscScore","reactScore","wev_devScore","this","auth","isLoggedIn","user","error","inProgress","className","style","display","placeholder","required","onChange","target","onClick","to","textDecoration","color","src","Component","connect","Sign_up","handleSignup","email","password","confrimPassword","Student","handleDownload","csvData","blob","Blob","window","URL","createObjectURL","a","document","createElement","setAttribute","appendChild","click","removeChild","rows","i","interviewInfo","length","arr","_id","dsaScore","web_devScore","date","company","writeToString","React","Login","handleSubmitBtn","setItem","token","StudentList","students","map","Home","createInterview","createNewInterview","interview","selectStudent","id","changeInterviewResult","result","InterviewListItem","handleSelectStudent","key","SelectedList","handleChangeResult","index","defaultValue","Lists","toggleStudentList","toggleList","selected","Interview","handleCreateBtn","formDispaly","interviews","App","fetchSuccess","JwtDecode","authenticateUser","exact","path","render","intialState","combineReducers","action","newState","filter","state1","store","createStore","reducer","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.97cbff6c.chunk.js","sourcesContent":["const API_ROOT = \"http://localhost:9000\";\n\nexport const Api_url = {\n  fetchStudent: () => `${API_ROOT}/student/all`,\n  userLogin: () => `${API_ROOT}/employees/log-in`,\n  userSignUp: () => `${API_ROOT}/employees/sign-up`,\n  createStudent: () => `${API_ROOT}/student/create`,\n  fetchInterview: () => `${API_ROOT}/interview/all`,\n  createInterview: () => `${API_ROOT}/interview/create`,\n  selectStudent: (interview_id, student_id) =>\n    `${API_ROOT}/interview/select/student?interview_id=${interview_id}&&student_id=${student_id}`,\n  changeInterviewResult :(interview_id, student_id,status) =>\n  `${API_ROOT}/interview/changeResult?interview_id=${interview_id}&&student_id=${student_id}&&status=${status}`,\n};\n","export function getFormBody(params){\n    let formBody = []\n\n    for(let property in params){\n        let encodedKey = encodeURIComponent(property); \n        let encodedValue = encodeURIComponent(params[property]);\n\n        formBody.push(encodedKey + '=' + encodedValue);\n    }\n\n    return formBody.join('&')\n}\n\nexport function getAuthToken(){\n    return localStorage.getItem('token');\n}","import {\n  USER_LOGIN_START,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAILED,\n  AUTHENTICATE_USER,\n  LOG_OUT,\n  CLEAR_AUTH,\n  SIGN_UP_SUCCESS,\n  SIGN_UP_FAILED,\n} from \"./actionTypes\";\nimport { Api_url } from \"../helpers/url\";\nimport { getFormBody } from \"../helpers/utils\";\n\nexport function startLogin() {\n  return {\n    type: USER_LOGIN_START,\n  };\n}\n\nexport function loginSuccess() {\n  return {\n    type: USER_LOGIN_SUCCESS,\n  };\n}\nexport function loginFailed(message) {\n  return {\n    type: USER_LOGIN_FAILED,\n    message\n  };\n}\n\nexport function loginUser(data) {\n  return (dispatch) => {\n     dispatch(startLogin());\n    let url = Api_url.userLogin();\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: getFormBody(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"login data\", data);\n        if (data.success) {\n          localStorage.setItem(\"token\", data.token);\n          dispatch(loginSuccess());\n        } else {\n          dispatch(loginFailed(data.message));\n        }\n      });\n  };\n}\n\nexport function authenticateUser(user) {\n  return {\n    type: AUTHENTICATE_USER,\n    user\n  };\n}\n\nexport function logout(){\n    return {\n        type:LOG_OUT,\n    }\n}\nexport function clearAuthState(){\n    return {\n        type:CLEAR_AUTH\n    }\n}\nexport function signUp(data){\n    return (dispatch)=>{\n       let url = Api_url.userSignUp();\n       fetch(url,{\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\n        },\n        body: getFormBody(data),\n       })\n       .then(response =>response.json())\n       .then(data=>{\n           console.log('new employees data',data);\n           dispatch(signupUser(data.message))\n       })\n    }\n}\n\nexport function signupUser(message){\n    return {\n       type:SIGN_UP_SUCCESS,\n       message\n    }\n}\n\n\n","export const FETCH_STUDENT = 'FETCH_STUDENT';\nexport const UPDATE_STUDENT = 'UPDATE_STUDENT';\n// login \nexport const USER_LOGIN_START = 'USER_LOGIN_START';\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED';\n// authorization\nexport const AUTHENTICATE_USER = 'AUTHENTICATE_USER';\nexport const LOG_OUT = 'LOG_OUT';\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\n// SIGN - UP\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILED = 'SIGN_UP_FAILED';\nexport const CREATE_STUDENT = 'CREATE_STUDENT';\n// fetch interviews\nexport const FETCH_INTERVIEW = 'FETCH_INTERVIEW';\nexport const CREATE_INTERVIEW = 'CREATE_INTERVIEW';\nexport const CHANGE_INTERVIEW_RESULT = 'FETCH_INTERVIEW_RESULT';\n\n//select student for interview\nexport const SELECT_FOR_INTERVIEW = 'SELECT_FOR_INTERVIEW';","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { logout } from \"../actions/auth\";\nimport { createStudent } from \"../actions/student\";\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  };\n}\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formStyle: \"none\",\n      name: \"\",\n      batch: \"\",\n      collageName: \"\",\n      status: \"\",\n      dscScore: \"\",\n      reactScore: \"\",\n      wev_devScore: \"\",\n    };\n  }\n\n  handleLogOut = () => {\n    localStorage.removeItem(\"token\");\n    this.props.dispatch(logout());\n  };\n\n  showform = () => {\n    if (this.state.formStyle === \"none\") {\n      this.setState({\n        formStyle: \"flex\",\n      });\n    } else {\n      this.setState({\n        formStyle: \"none\",\n      });\n    }\n  };\n  handleForm = (e) => {\n    e.preventDefault();\n    this.props.dispatch(createStudent(this.state));\n  };\n  handleChange = (fieldName, value) => {\n    this.setState({\n      [fieldName]: value,\n    });\n  };\n\n  render() {\n    const { isLoggedIn, error, inProgress, user } = this.props.auth;\n    return (\n      <div className=\"Navbar\">\n        <form\n          className=\"student-form\"\n          style={{ display: this.state.formStyle }}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Student Name\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"name\", e.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            name=\"batch\"\n            placeholder=\"Student Batch\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"batch\", e.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            name=\"collage_name\"\n            placeholder=\"Collage Name\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"collageName\", e.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            name=\"status\"\n            placeholder=\"Placement status\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"status\", e.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            name=\"dsa_Score\"\n            placeholder=\"DSA final Score\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"dsaScore\", e.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            name=\"react_Score\"\n            placeholder=\"React final Score\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"reactScore\", e.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            name=\"web_devScore\"\n            placeholder=\"Web development final score\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"web_devScore\", e.target.value);\n            }}\n          />\n          <input\n            className=\"submit-btn\"\n            type=\"submit\"\n            value=\"create\"\n            onClick={this.handleForm}\n          />\n        </form>\n        <div className=\"left-nav\">\n          <Link to ='/' style={{textDecoration:'none',color:'white'}}>\n            <h1> Student Database</h1>\n          </Link>\n        </div>\n        {isLoggedIn == false ? (\n          <div className=\"right-nav\">\n            <Link to=\"/\">\n              <div>Log-in</div>\n            </Link>\n            <Link to=\"/signup\">\n              <div>Register</div>\n            </Link>\n          </div>\n        ) : (\n          <div className=\"right-nav\">\n            <div onClick={this.showform}>\n              <button>Create New Student</button>\n            </div>\n            <div>\n              <Link to=\"/interviews\">\n                <button>Interviews</button>\n              </Link>\n            </div>\n            <div className=\"user-avatar\">\n              <img src=\"https://image.flaticon.com/icons/svg/145/145867.svg\" />\n              <span>{user.name}</span>\n            </div>\n            <div onClick={this.handleLogOut}>logout</div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import{\n    UPDATE_STUDENT,\n    CREATE_STUDENT,\n\n} from './actionTypes';\nimport { Api_url } from '../helpers/url';\nimport { getFormBody,getAuthToken} from \"../helpers/utils\";\n\n\nexport function updateStudent(students){\n    return {\n        type:UPDATE_STUDENT,\n        students\n    }\n}\nexport function createNewStudent(student){\n   return {\n       type:CREATE_STUDENT,\n       student\n   }\n}\nexport function createStudent(data){\n    return (dispatch)=>{\n        const url = Api_url.createStudent();\n        fetch(url,{\n            method: 'POST',\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n              Authorization: `Bearer ${getAuthToken()}`,\n            },\n            body: getFormBody(data),\n        })\n        .then(response=>response.json())\n        .then(data=>{\n            console.log('new student data',data);\n            if(data.success){\n                dispatch(createNewStudent(data.student))\n            }\n        })\n        \n    }\n}\n\n\nexport function fetchStudent(){\n   return (dispatch) => {\n      const url = Api_url.fetchStudent();\n      fetch(url)\n      .then(response =>response.json())\n      .then(data =>{\n          console.log('student data',data);\n          if(data.success){\n              dispatch(updateStudent(data.students))\n          }\n      });\n   }\n};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { clearAuthState, signUp } from \"../actions/auth\";\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nclass Sign_up extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      name: \"\",\n      password: \"\",\n      confrimPassword: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(clearAuthState());\n  }\n  handleSignup = (e) => {\n    e.preventDefault();\n    this.props.dispatch(signUp(this.state));\n  };\n  handleChange = (fieldName,value)=>{\n      this.setState({\n          [fieldName]:value,\n      })\n  }\n\n  render() {\n    const { isLoggedIn, error } = this.props.auth;\n    if (isLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <form className=\"form\">\n        <h2>Register Here</h2>\n        {error && <div className=\"alert error-dailog\">{error}</div>}\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter Your Email\"\n          required\n          onChange={(e) => {\n            this.handleChange(\"email\", e.target.value);\n          }}\n        />\n        <input\n          type=\"name\"\n          name=\"text\"\n          placeholder=\"Name\"\n          required\n          onChange={(e) => {\n            this.handleChange(\"name\", e.target.value);\n          }}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n          onChange={(e) => {\n            this.handleChange(\"password\", e.target.value);\n          }}\n        />\n        <input\n          type=\"password\"\n          name=\"confrimPassword\"\n          placeholder=\"confirm password\"\n          required\n          onChange={(e) => {\n            this.handleChange(\"confirmPassword\", e.target.value);\n          }}\n        />\n        <button className=\"login-btn\" onClick={this.handleSignup}>\n          Create\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Sign_up);\n","import React from \"react\";\nimport { writeToString } from \"@fast-csv/format\";\n\nclass Student extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n       \n    };\n  }\n  componentDidMount() {\n    const {student}  = this.props;\n    const rows = [\n      [\n        \"Student id\",\n        \"student name\",\n        \"student college\",\n        \"student status\",\n        \"DSA Final Score\",\n        \"WebD Final Score\",\n        \"React Final Score\",\n        \"interview date\",\n        \"interview company\",\n        \"interview student result\",\n      ],\n    ];\n    for(let i=0;i<student.interviewInfo.length;i++){\n       let arr = [\n        student._id,\n        student.name,\n        student.collageName,\n        student.status,\n        student.dsaScore,\n        student.web_devScore,\n        student.reactScore,\n        student.interviewInfo[i].date,\n        student.interviewInfo[i].company,\n        student.interviewInfo[i].status,\n       ]\n       rows.push(arr);\n      }\n      \n  \n    writeToString(rows).then((data) => {\n      this.setState({\n        csvData: data,\n      });\n    });\n  }\n\n  handleDownload = () => {\n    const {student}  = this.props;\n    const data = this.state.csvData;\n    const obj = { hello: \"world\" };\n    const blob = new Blob([data], {\n      type: \"text/csv\",\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.setAttribute(\"hidden\", \"\");\n    a.setAttribute(\"href\", url);\n    a.setAttribute(\"download\", 'download.csv');\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n  render() {\n    const { student } = this.props;\n    return (\n      <div className=\"student\">\n        <div className=\"student-info\">\n          <div>\n            <span>Name</span>\n            <span>{student.name}</span>\n          </div>\n          <div>\n            <span>Batch</span>\n            <span>{student.batch}</span>\n          </div>\n        </div>\n        <button className=\"downloadBtn\" onClick={this.handleDownload}>\n          download\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Student;\n\n// student._id,\n      //  student.name,\n      //  student.collageName,\n      //  student.status,\n      //  student.dsaScore,\n      //  student.web_devScore,\n      //  student.reactScore,\n      //  student.interviewDate[0],\n      //  student.interviewCompany[0],\n      //  student.interviewResult[0],","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {loginUser, clearAuthState} from '../actions/auth';\n\nfunction mapStateToProps(state) {\n  return {\n      auth:state.auth\n  };\n}\n\n\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      password: \"\",\n    };\n  }\n  componentDidMount() {\n      this.props.dispatch(clearAuthState());\n  }\n  \n\n  handleChange = (fieldName,value) => {\n    this.setState({\n       [fieldName]:value,\n    });\n  };\n  handleSubmitBtn = (e)=>{\n    e.preventDefault();\n     this.props.dispatch(loginUser(this.state))\n  }\n\n  render() {\n      const {error,inProgress} = this.props.auth;\n    return (\n      <form className=\"form\">\n        <h2>Log in</h2>\n        {error && <div className=\"alert error-dailog\">{error}</div>}\n        <input\n          type=\"email\"\n          name=\"email\"\n          placeholder=\"Enter Your Email\"\n          required\n          onChange={(e) => {\n            this.handleChange(\"email\", e.target.value);\n          }}\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Password\"\n          required\n          onChange={(e) => {\n            this.handleChange(\"password\", e.target.value);\n          }}\n        />\n        <button className=\"login-btn\" onClick={this.handleSubmitBtn} >Log in</button>\n      </form>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Login);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Student from './Student';\n\nfunction mapStateToProps(state) {\n    return {\n        students:state.students\n    };\n}\n\nclass StudentList extends Component {\n    render() {\n        const {students} = this.props;\n        return (\n            <div className = 'student-list'>\n              {students.map(student=>(\n                 <Student student = {student}/>\n              ))}  \n            </div>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n)(StudentList);","import React, { Component } from \"react\";\nimport Student from \"./Student\";\nimport Login from \"./Login\";\nimport StudentList from \"./StudentList\";\n\nclass Home extends Component {\n  render() {\n    const { isLoggedIn } = this.props;\n    return (\n      <div className=\"home\">{isLoggedIn === true ? <StudentList /> : <Login />}</div>\n    );\n  }\n}\n\nexport default Home;\n","import {\n  FETCH_INTERVIEW,\n  CREATE_INTERVIEW,\n  SELECT_FOR_INTERVIEW,\n  CHANGE_INTERVIEW_RESULT,\n} from \"./actionTypes\";\nimport { Api_url } from \"../helpers/url\";\nimport { getFormBody, getAuthToken } from \"../helpers/utils\";\nimport interview from \"../reducers/interview\";\n\nexport function fetchSuccess(data) {\n  return {\n    type: FETCH_INTERVIEW,\n    data,\n  };\n}\nexport function fetchInterviews() {\n  return (dispatch) => {\n    let url = Api_url.fetchInterview();\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"interviews data\", data);\n        if (data.success) {\n          dispatch(fetchSuccess(data.interviews));\n        }\n      });\n  };\n}\nexport function createInterview(data) {\n  return (dispatch) => {\n    const url = Api_url.createInterview();\n    fetch(url, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n        Authorization: `Bearer ${getAuthToken()}`,\n      },\n      body: getFormBody(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"new interview data\", data);\n        if (data.success) {\n          dispatch(createNewInterview(data.interview));\n        }\n      });\n  };\n}\nexport function createNewInterview(data) {\n  return {\n    type: CREATE_INTERVIEW,\n    data,\n  };\n}\n\nexport function selectStudent(interview_id, student_id) {\n  return (dispatch) => {\n    const url = Api_url.selectStudent(interview_id, student_id);\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"none\",\n        Authorization: `Bearer ${getAuthToken()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"selected student data\", data);\n        if (data.success) {\n          dispatch(\n            selectStudentForInterview(\n              data.student,\n              interview_id,\n              data.interview.interviewInfo\n            )\n          );\n        }\n      });\n  };\n}\nexport function selectStudentForInterview(student, id, interviewInfo) {\n  return {\n    type: SELECT_FOR_INTERVIEW,\n    student,\n    id,\n    interviewInfo,\n  };\n}\nexport function changeInterviewResult(student_id, interview_id,status) {\n  console.log(\"fetch function\");\n  console.log(student_id,interview_id,);\n  return (dispatch) => {\n    const url = Api_url.changeInterviewResult(interview_id,student_id,status);\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"none\",\n        Authorization: `Bearer ${getAuthToken()}`,\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"changed interview result data\", data);\n        if (data.success) {\n          dispatch(changeResult(data.interview));\n        }\n      });\n  };\n}\n\nexport function changeResult(result){\n  return {\n    type:CHANGE_INTERVIEW_RESULT,\n    result,  \n  };\n}\n","import React, { Component } from 'react';\nimport { selectStudent } from '../actions/interview';\n\nclass InterviewListItem extends Component {\n   \n    handleSelectStudent = ()=>{\n        const {interview_id,student} = this.props;\n        this.props.dispatch(selectStudent(interview_id,student._id));\n    }\n    render() {\n        const {student} = this.props;\n\n        return (\n            <div className = 'list' key={student._id}>\n                <span>{student.name}</span>\n                <button onClick= {this.handleSelectStudent}>select</button>\n              </div>\n        );\n    }\n}\n\nexport default InterviewListItem;","import React, { Component } from \"react\";\nimport {changeInterviewResult } from \"../actions/interview\";\n\nclass SelectedList extends Component {\n  \n  handleChangeResult = (e) => {\n    const {student,interview} = this.props;\n    this.props.dispatch(changeInterviewResult(student._id,interview._id,e.target.value));\n  };\n  render() {\n    const { student, index, interview } = this.props;\n\n    return (\n      <div className=\"upper-list\" key={student._id}>\n        <span>{student.name}</span>\n        <select\n          name=\"result\"\n          defaultValue={interview.interviewInfo[index].status}\n          onChange={this.handleChangeResult}\n        >\n          <option>PASS</option>\n          <option>FAIL</option>\n          <option>On-Hold</option>\n          <option>Did Not Attempt</option>\n        </select>\n      </div>\n    );\n  }\n}\n\nexport default SelectedList;\n","import React, { Component } from \"react\";\nimport InterviewListItem from \"./InterviewListItem\";\nimport SelectedList from \"./SelectedList\";\n\nclass Lists extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toggleList: \"none\",\n    };\n  }\n  toggleStudentList = () => {\n    const { toggleList } = this.state;\n    if (toggleList == \"none\") {\n      this.setState({\n        toggleList: \"block\",\n      });\n    } else {\n      this.setState({\n        toggleList: \"none\",\n      });\n    }\n  };\n  render() {\n    const { students, interview } = this.props;\n    return (\n      <div className=\"interview-list\" >\n        <div className=\"interview\" onClick={this.toggleStudentList}>\n          <h3>{interview.name}</h3>\n          <small>{interview.date}</small>\n        </div>\n        <div className=\"students\" style={{ display: this.state.toggleList }} >\n          {interview.selected.length > 0 &&\n            interview.selected.map((student, index) => {\n              return (\n                <SelectedList\n                  student={student}\n                  dispatch={this.props.dispatch}\n                  interview={interview}\n                  index={index}\n                  key={index}\n                />\n              );\n            })}\n          {interview.students &&\n            interview.students.map((student) => {\n              return (\n                <InterviewListItem\n                  student={student}\n                  interview_id={interview._id}\n                  dispatch={this.props.dispatch}\n                  key={student._id}\n                />\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Lists;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport interview from \"../reducers/interview\";\nimport { createInterview } from \"../actions/interview\";\nimport student from \"../reducers/student\";\nimport Lists from \"./Lists\";\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n    interviews: state.interviews,\n    students: state.students,\n  };\n}\n\nclass Interview extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      formDispaly: \"none\",\n      name: \"\",\n      date: \"\",\n    };\n    \n  }\n  \n\n  handleCreateBtn = () => {\n    if (this.state.formDispaly === \"none\") {\n      this.setState({\n        formDispaly: \"flex\",\n      });\n    }\n  };\n  handleSubmitBtn = (e) => {\n    e.preventDefault();\n    this.props.dispatch(createInterview({\n      name:this.state.name,\n      date:this.state.date\n    }));\n    \n    this.setState({\n      formDispaly: \"none\",\n    });\n  };\n\n  handleChange = (fieldName, value) => {\n    this.setState({\n      [fieldName]: value,\n    });\n  };\n \n\n  render() {\n    const { isLoggedIn, error } = this.props.auth;\n    const { interviews, students } = this.props;\n    if (!isLoggedIn) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"interview-list-container\">\n        <button className=\"heading\" onClick={this.handleCreateBtn}>\n          Create Interview\n        </button>\n        <form\n          className=\"interview-form\"\n          style={{ display: this.state.formDispaly }}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Subject Name\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"name\", e.target.value);\n            }}\n          />\n          <input\n            type=\"date\"\n            name=\"date\"\n            placeholder=\"Date\"\n            required\n            onChange={(e) => {\n              this.handleChange(\"date\", e.target.value);\n            }}\n          />\n          <button onClick={this.handleSubmitBtn}>Create</button>\n        </form>\n        {interviews.length>0&&(interviews.map((interview) => {\n          return (\n            <Lists interview = {interview} students = {students} key={interview._id} dispatch={this.props.dispatch}/>\n          );\n        }))}\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Interview);\n","import React from \"react\";\nimport \"../App.css\";\nimport Navbar from \"./Navbar\";\nimport { connect } from \"react-redux\";\nimport { fetchStudent } from \"../actions/student\";\nimport JwtDecode from \"jwt-decode\";\nimport { authenticateUser } from \"../actions/auth\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport Sign_up from \"./Sign_up\";\nimport Home from \"./Home\";\nimport Interview from \"./Interview\";\nimport { fetchInterviews } from \"../actions/interview\";\n\n\n\nclass App extends React.Component {\n  componentDidMount() {\n    this.props.dispatch(fetchStudent());\n    this.props.dispatch(fetchInterviews());\n    const { auth } = this.props;\n\n    let token = localStorage.getItem(\"token\");\n    if (token) {\n      let user = JwtDecode(token);\n      console.log(\"user\", user);\n      this.props.dispatch(\n        authenticateUser({\n          email: user.email,\n          _id: user._id,\n          name: user.name,\n        })\n      );\n    }\n  }\n\n  render() {\n    console.log(\"props\", this.props);\n    const { user, isLoggedIn, inProgress, error } = this.props.auth;\n    return (\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={(props) => {\n              return <Home {...props} isLoggedIn={isLoggedIn} />;\n            }}\n          />\n          <Route\n            path=\"/signup\"\n            render={(props) => {\n              return <Sign_up {...props} auth={this.props.auth} />;\n            }}\n          />\n          <Route\n            path=\"/interviews\"\n            render={(props) => {\n              return <Interview {...props} />;\n            }}\n          />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    students: state.students,\n    auth: state.auth,\n    interviews:state.interviews\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import {\n  USER_LOGIN_START,\n  USER_LOGIN_SUCCESS,\n  USER_LOGIN_FAILED,\n  AUTHENTICATE_USER,\n  LOG_OUT,\n  CLEAR_AUTH,\n  SIGN_UP_SUCCESS,\n} from \"../actions/actionTypes\";\n\nconst intialState = {\n  user: {},\n  error: null,\n  isLoggedIn: false,\n  inProgress: false,\n};\n\nexport default function auth(state = intialState, action) {\n  switch (action.type) {\n    case CLEAR_AUTH:\n        return {\n            ...state,\n            error:null,\n        }\n    case USER_LOGIN_START:\n      return {\n        ...state,\n        inProgress: true,\n      };\n    case USER_LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        inProgress: false,\n      };\n    case USER_LOGIN_FAILED:\n    case SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        error: action.message,\n      };\n    case AUTHENTICATE_USER:\n      return {\n        ...state,\n        user: action.user,\n        isLoggedIn: true,\n        inProgress: false,\n      };\n    case LOG_OUT:\n        return {\n            ...state,\n            user:{},\n            error:null,\n            isLoggedIn:false,\n            inProgress:false,\n        }\n    \n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport students from \"./student\";\nimport auth from \"./auth\";\nimport interviews from \"./interview\";\nexport default combineReducers({\n  students,\n  auth,\n  interviews,\n});\n","import { UPDATE_STUDENT, CREATE_STUDENT } from \"../actions/actionTypes\";\n\nexport default function student(state = [], action) {\n  switch (action.type) {\n    case UPDATE_STUDENT:\n      return action.students;\n    case CREATE_STUDENT:\n      return [action.student, ...state];\n    default:\n      return state;\n  }\n}\n","import {\n  FETCH_INTERVIEW,\n  CREATE_INTERVIEW,\n  SELECT_FOR_INTERVIEW,\n  CHANGE_INTERVIEW_RESULT,\n} from \"../actions/actionTypes\";\n\nexport default function interview(state = [], action) {\n  switch (action.type) {\n    case FETCH_INTERVIEW:\n      return action.data;\n    case CREATE_INTERVIEW:\n      return [action.data, ...state];\n    case SELECT_FOR_INTERVIEW:\n      const newState = state.filter((interview) => {\n        if (interview._id == action.id) {\n          const state1 = interview.students.filter((student) => {\n            return student._id != action.student._id;\n          });\n\n          interview.selected = [...interview.selected, action.student];\n          interview.interviewInfo = action.interviewInfo;\n          interview.students = state1;\n          return interview;\n        }\n        return interview;\n      });\n      return newState;\n    case CHANGE_INTERVIEW_RESULT:\n         return action.result\n    default:\n      return state;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport {Provider} from 'react-redux';\nimport reducer from './reducers';\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n  \n\nReactDOM.render(\n  \n   <Provider store={store}>\n      <App />\n   </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}